pipeline{
     agent none
     environment{     
    DOCKERHUB_CREDENTIALS= credentials('dockerhub_id')
    GITHUB_CREDENTIALS= credentials('github_id')
    REVISION = 61
    HARBOR_CREDENTIALS = credentials('harbor_id') 
    
} 
     stages{
         stage('Checkout') {
         agent{
     label 'imageidentificationfront'
     }
          steps{ 
          sh 'pwd'
          git branch: 'main', url: 'https://github.com/abhijitchavan408/image-identification-ui.git'
               }
          }
      
          stage('Docker build'){
          agent{
     label 'imageidentificationfront'
     }
          steps{
          sh "docker image prune -af"
               sh "docker image build -t sumithpe/imagefrontidentification:$REVISION ."
               }  
          }
          
          
          stage('Docker push'){
          agent{
     label 'imageidentificationfront'
     }
          steps{
               sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                        sh "docker image push sumithpe/imagefrontidentification:$REVISION"
               
          }
          }   
          
          
          
          
          
          
          
          
          
          stage('Git update'){
          agent{
     label 'imageidentificationfront'
     }
     steps {
            script {
            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                sh '''
                 cd /home/hpe/imageidentification/imageidentificationconfig
                    git pull https://"$GITHUB_CREDENTIALS_USR":"$GITHUB_CREDENTIALS_PSW"@github.com/sumit871996/imageidentificationconfig.git
                    sh frontendscript.sh "$REVISION"
                    git add .
                    git commit -m "updated deployment file"
                    git push https://"$GITHUB_CREDENTIALS_USR":"$GITHUB_CREDENTIALS_PSW"@github.com/sumit871996/imageidentificationconfig.git
                    '''
                    }
                }
            }
          
          } 
          
          
          
          
          
          
          
          stage('Push to harbor'){
          agent{
        label 'harbor_node'
    }
            steps{
            sh "docker image prune -af"
                sh "docker image pull sumithpe/imagefrontidentification:$REVISION"
                  sh "docker image tag sumithpe/imagefrontidentification:$REVISION 20.21.104.152/imageidentification/imagefrontidentification:$REVISION"
                sh 'echo $HARBOR_CREDENTIALS_PSW | docker login 20.21.104.152 -u $HARBOR_CREDENTIALS_USR --password-stdin'  
                sh "docker image push 20.21.104.152/imageidentification/imagefrontidentification:$REVISION"
            }
        }
        
      

        
       
          
          
     }
}
